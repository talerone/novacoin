#!/bin/sh

# PROVIDE: taler
# REQUIRE: LOGIN
# KEYWORD: shutdown

#
# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# taler_enable (bool): Set to NO by default. Set this variable to YES if you want to enable taler service.
# taler_config (path): Set to /usr/local/etc/taler.conf by default.
# taler_user:  The user account taler daemon runs as. It uses 'root' user by default.
# taler_group: The group account taler daemon runs as. It uses 'wheel' group by default.
# taler_datadir (str): Default to "/var/db/taler". Base data directory.

. /etc/rc.subr

name=taler
rcvar=taler_enable

: ${taler_enable:=NO}
: ${taler_config=/usr/local/etc/taler.conf}
: ${taler_datadir=/var/db/taler}
: ${taler_user="root"}
: ${taler_group="wheel"}

required_files=${taler_config}
command=/usr/local/bin/talerd
taler_chdir=${taler_datadir}
pidfile="${taler_datadir}/talerd.pid"
stop_cmd=taler_stop
command_args="-conf=${taler_config} -datadir=${taler_datadir} -daemon -pid=${pidfile}"
start_precmd="${name}_prestart"

taler_create_datadir()
{
	echo "Creating data directory"
	eval mkdir -p ${taler_datadir}
	[ $? -eq 0 ] && chown -R ${taler_user}:${taler_group} ${taler_datadir}
}

taler_prestart()
{
	if [ ! -d "${taler_datadir}/." ]; then
		taler_create_datadir || return 1
	fi
}

taler_requirepidfile()
{
	if [ ! "0`check_pidfile ${pidfile} ${command}`" -gt 1 ]; then
		echo "${name} not running? (check $pidfile)."
		exit 1
	fi
}

taler_stop()
{
    taler_requirepidfile

	echo "Stopping ${name}."
	eval ${command} -conf=${taler_config} -datadir=${taler_datadir} stop
	wait_for_pids ${rc_pid}
}

load_rc_config $name
run_rc_command "$1"
